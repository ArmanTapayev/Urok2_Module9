#include<stdio.h>
#include<iostream>
#include<locale.h>
#include<time.h>
#include "Header.h"

void main()
{
	setlocale(LC_ALL, "rus");
	srand(time(NULL));
	int n;
	do
	{
		printf("Введите номер задания: ");
		scanf("%d", &n);

		switch (n)
		{
			case 1:
			{
				/*1. Ввести вещественные числа. Создать массив из этих чисел, пока не встретится число 10.
				Вычислить сумму отрицательных элементов массива */
				double *arr = NULL;
				int stub = 1;

				arr = (double*)calloc(1, sizeof(double));
				int N = 1;
				printf("Для формирования массива введите произвольное число вещественных чисел.\n");
				printf("Для завершения ввода наберите 10.\n");
				do
				{
					printf("Введите число: ");
					if (scanf("%lf", (arr + N - 1)) == true)
					{
						N++;
						arr = (double*)realloc(arr, sizeof(double)*(N + 1));
					}
					else if(*(arr + N - 1)==0)
						break;

				} while (true);

				N--;

				printArray(arr, &stub, &N);

				system("pause");
				system("cls");
			}
			break;

			case 2:
			{
				/*2. Ввести в StringGrid массив из 10 целых чисел. Создать два новых массива – из положительных 
				и отрицательных элементов исходного массива. Определить суммы элементов каждого массива. */

				system("pause");
				system("cls");
			}
			break;

			case 3:
			{
				/*3. Ввести массив из 9 вещественных чисел. Создать новый массив из элементов исходного,
				которые по модулю больше 10. Вычислить среднее арифметическое элементов нового массива */
				

			
				system("pause");
				system("cls");
			}
			break;

			case 4:
			{
		    	/*4. Ввести вещественные числа. Создать массив из положительных чисел. Определить, 
				является ли массив упорядоченным по возрастанию.*/

				system("pause");
				system("cls");
			}
			break;

			case 5:
			{
				/*5. Ввести целые числа. Создать массив из этих чисел до первого отрицательного числа. Определить, является ли массив упорядоченным по убыванию.*/
		
				system("pause");
				system("cls");
			}
			break;

			case 6:
			{
				/*6. Ввести массив из 15 вещественных чисел. Создать новый массив из элементов исходного, 
				в который не включать элементы, попадающие в промежуток (-3,7). Определить произведение
				отрицательных элементов нового массива */


				system("pause");
				system("cls");
			}
			break;



			case 7:
			{
				/*7. Ввести целые числа. Создать массив из чисел, которые не делятся на 5. 
				Определить минимальный элемент массива. */

		
				system("pause");
				system("cls");
			}
			break;

			case 8:
			{
				/*8. Ввести вещественные числа. Создать массив из этих чисел, пока не встретится число 33. 
				Определить максимальный элемент массива*/
	

				system("pause");
				system("cls");
			}
			break;

			case 9:
			{
				/*9. Ввести массив из 9 вещественных чисел. Создать новый массив из элементов исходного, 
				которые по модулю не больше 12. Поменять местами минимальный и максимальный элементы нового массива*/

				system("pause");
				system("cls");
			}
			break;

			case 10:
			{
				/*10. Ввести вещественные числа. Создать массив из чисел, которые попадают в интервал [2,13]. 
				Определить, есть ли в массиве числа, большие 10.*/
		

				system("pause");
				system("cls");			
			}
			break;
		}

	} while (n != 0);

}
